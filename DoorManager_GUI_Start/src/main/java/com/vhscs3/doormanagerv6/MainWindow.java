/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.vhscs3.doormanagerv6;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author irad_Allen
 */
public class MainWindow extends javax.swing.JFrame {
    
    private HashMap<String, Door>       doors;             //Collection of doors, door name is the key
    private HashMap<String, Schedule>   schedules;         //Collection of schedules, schedule name is the key
    private HashMap<Integer, Badge>     badges;            //Collection of BADGES, employeeID is the key
    private JComponent[] schedulesGroup;                              // GROUP ALL OF THE SCHEDULES MANGER COMPONENTS FOR EACH
    private JComponent[]                doorsGroup;        // Array of enabled/disabled form elements on the doors tabbed pane
    private Schedule                    currentSchedule;    // Used to get values for editing and adding new schedule
    
    public MainWindow() {
        
        //DataFactory df = new DataFactory();
        //writeModel(df.getModel());

        DoorManagerModel model = readModel();
        doors = model.doors;
        schedules = model.schedules;
        badges = model.badges;
        
        initComponents();
        
        buildSchedulesGroup();
        buildDoorsGroup();
        setGroupEnabled(false, schedulesGroup);
        
        buildSchedulesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        Schedules_dialog_time = new javax.swing.JDialog();
        Schedules_label_instructions = new javax.swing.JLabel();
        Schedules_label_openTimes = new javax.swing.JLabel();
        Schedules_label_closedTimes = new javax.swing.JLabel();
        Schedules_comboBox_openHours = new javax.swing.JComboBox<>();
        Schedules_comboBox_closedHours = new javax.swing.JComboBox<>();
        Schedules_comboBox_openMinutes = new javax.swing.JComboBox<>();
        Schedules_comboBox_closedMinutes = new javax.swing.JComboBox<>();
        Schedules_button_save = new javax.swing.JButton();
        Schedules_button_cancel = new javax.swing.JButton();
        mainWindow_tabbedPane_features = new javax.swing.JTabbedPane();
        mainWindow_pane_dashboard = new javax.swing.JPanel();
        mainWindow_pane_doors = new javax.swing.JPanel();
        mainWondow_pane_DoorInfo = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        doors_panel_CrudButtons = new javax.swing.JPanel();
        doors_CRUDbutton_add = new javax.swing.JButton();
        doors_CRUDbutton_edit = new javax.swing.JButton();
        doors_CRUDbutton_delete = new javax.swing.JButton();
        doors_CRUDbutton_save = new javax.swing.JButton();
        doors_panel_DisplayInfo = new javax.swing.JPanel();
        doors_label_name = new javax.swing.JLabel();
        doors_label_status = new javax.swing.JLabel();
        doors_label_building = new javax.swing.JLabel();
        doors_label_schedules = new javax.swing.JLabel();
        doors_label_log = new javax.swing.JLabel();
        doors_TextField_name = new javax.swing.JTextField();
        doors_label_CurrentDoorStatus = new javax.swing.JLabel();
        doors_label_location = new javax.swing.JLabel();
        doors_button_SlectLocation = new javax.swing.JButton();
        doors_radiobutton_Building1 = new javax.swing.JRadioButton();
        doors_radiobutton_Building2 = new javax.swing.JRadioButton();
        doors_radiobutton_Building3 = new javax.swing.JRadioButton();
        doors_ComboBox_MondaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_TuesdaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_WednesdaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_FridaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_ThursadaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_SaturdaySchedule = new javax.swing.JComboBox<>();
        doors_ComboBox_SundaySchedule = new javax.swing.JComboBox<>();
        doors_label_monday = new javax.swing.JLabel();
        doors_label_tuesday = new javax.swing.JLabel();
        doors_label_wednesday = new javax.swing.JLabel();
        doors_label_thursday = new javax.swing.JLabel();
        doors_label_friday = new javax.swing.JLabel();
        doors_label_saturday = new javax.swing.JLabel();
        doors_label_sunday = new javax.swing.JLabel();
        doors_label_description = new javax.swing.JLabel();
        doors_textField_description = new javax.swing.JTextField();
        doors_table_logs = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mainWindow_pane_schedules = new javax.swing.JPanel();
        mainWondow_pane_ScheduleInfo = new javax.swing.JScrollPane();
        Schedule_table_schdulesinfo = new javax.swing.JTable();
        shedules_panel_CrudButtons = new javax.swing.JPanel();
        Schedule_CRUD_add = new javax.swing.JButton();
        Schedule_CRUD_edit = new javax.swing.JButton();
        Schedule_CRUD_delete = new javax.swing.JButton();
        Schedule_CRUD_save = new javax.swing.JButton();
        schedules_panel_DisplayInfo = new javax.swing.JPanel();
        Schedule_label_name = new javax.swing.JLabel();
        Schedule_textField_name = new javax.swing.JTextField();
        Schedule_label_description = new javax.swing.JLabel();
        Schedule_scrollPanel_description = new javax.swing.JScrollPane();
        Schedule_textArea_description = new javax.swing.JTextArea();
        schedules_fiels_color = new javax.swing.JLabel();
        schedules_fiels_colorselector = new javax.swing.JLabel();
        Schedule_textLabel_times = new javax.swing.JLabel();
        Schedule_Button_chooseColor = new javax.swing.JButton();
        Schedule_Button_addTime = new javax.swing.JButton();
        Schedule_Button_editTimes = new javax.swing.JButton();
        Schedule_Button_deleteTime = new javax.swing.JButton();
        Schedule_scrollPanel_OpenClosedTimes = new javax.swing.JScrollPane();
        Schedule_Table_OpenClosedTimes = new javax.swing.JTable();
        mainWindow_MenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        Schedules_dialog_time.setMinimumSize(new java.awt.Dimension(315, 261));
        Schedules_dialog_time.setModal(true);
        Schedules_dialog_time.setResizable(false);

        Schedules_label_instructions.setText("Select OPEN and CLOSED times");

        Schedules_label_openTimes.setText("Open Times");

        Schedules_label_closedTimes.setText("Closed Times");

        Schedules_comboBox_openHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOUR", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        Schedules_comboBox_closedHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOUR", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        Schedules_comboBox_openMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MINUTE", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        Schedules_comboBox_closedMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MINUTE", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        Schedules_button_save.setText("Save");
        Schedules_button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedules_button_saveActionPerformed(evt);
            }
        });

        Schedules_button_cancel.setText("Cancel");
        Schedules_button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedules_button_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Schedules_dialog_timeLayout = new javax.swing.GroupLayout(Schedules_dialog_time.getContentPane());
        Schedules_dialog_time.getContentPane().setLayout(Schedules_dialog_timeLayout);
        Schedules_dialog_timeLayout.setHorizontalGroup(
            Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                        .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Schedules_label_instructions)
                            .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                                    .addComponent(Schedules_label_closedTimes)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Schedules_comboBox_closedHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                                    .addComponent(Schedules_label_openTimes)
                                    .addGap(31, 31, 31)
                                    .addComponent(Schedules_comboBox_openHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Schedules_comboBox_openMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Schedules_comboBox_closedMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(Schedules_button_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Schedules_button_cancel)
                        .addGap(54, 54, 54))))
        );
        Schedules_dialog_timeLayout.setVerticalGroup(
            Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Schedules_dialog_timeLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(Schedules_label_instructions)
                .addGap(26, 26, 26)
                .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedules_label_openTimes)
                    .addComponent(Schedules_comboBox_openHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Schedules_comboBox_openMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedules_label_closedTimes)
                    .addComponent(Schedules_comboBox_closedHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Schedules_comboBox_closedMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(Schedules_dialog_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedules_button_save)
                    .addComponent(Schedules_button_cancel))
                .addGap(29, 29, 29))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout mainWindow_pane_dashboardLayout = new javax.swing.GroupLayout(mainWindow_pane_dashboard);
        mainWindow_pane_dashboard.setLayout(mainWindow_pane_dashboardLayout);
        mainWindow_pane_dashboardLayout.setHorizontalGroup(
            mainWindow_pane_dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1232, Short.MAX_VALUE)
        );
        mainWindow_pane_dashboardLayout.setVerticalGroup(
            mainWindow_pane_dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 931, Short.MAX_VALUE)
        );

        mainWindow_tabbedPane_features.addTab("Dashboard", mainWindow_pane_dashboard);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Status", "Color", "Schedule", "Building"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        mainWondow_pane_DoorInfo.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        doors_CRUDbutton_add.setText("Add");

        doors_CRUDbutton_edit.setText("Edit");

        doors_CRUDbutton_delete.setText("Delete");

        doors_CRUDbutton_save.setText("Save");

        javax.swing.GroupLayout doors_panel_CrudButtonsLayout = new javax.swing.GroupLayout(doors_panel_CrudButtons);
        doors_panel_CrudButtons.setLayout(doors_panel_CrudButtonsLayout);
        doors_panel_CrudButtonsLayout.setHorizontalGroup(
            doors_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doors_panel_CrudButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doors_CRUDbutton_add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doors_CRUDbutton_edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doors_CRUDbutton_delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(doors_CRUDbutton_save)
                .addContainerGap())
        );
        doors_panel_CrudButtonsLayout.setVerticalGroup(
            doors_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doors_panel_CrudButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doors_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_CRUDbutton_add)
                    .addComponent(doors_CRUDbutton_edit)
                    .addComponent(doors_CRUDbutton_delete)
                    .addComponent(doors_CRUDbutton_save))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        doors_label_name.setText("Door Name");

        doors_label_status.setText("Status");

        doors_label_building.setText("Building");

        doors_label_schedules.setText("Schedules");

        doors_label_log.setText("Logs");

        doors_label_CurrentDoorStatus.setText("OPEN");

        doors_label_location.setText("Location");

        doors_button_SlectLocation.setText("Set Location");

        doors_radiobutton_Building1.setText("1");

        doors_radiobutton_Building2.setText("2");

        doors_radiobutton_Building3.setText("3");

        doors_ComboBox_MondaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));

        doors_ComboBox_TuesdaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));
        doors_ComboBox_TuesdaySchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doors_ComboBox_TuesdayScheduleActionPerformed(evt);
            }
        });

        doors_ComboBox_WednesdaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));

        doors_ComboBox_FridaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));

        doors_ComboBox_ThursadaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));
        doors_ComboBox_ThursadaySchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doors_ComboBox_ThursadayScheduleActionPerformed(evt);
            }
        });

        doors_ComboBox_SaturdaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));

        doors_ComboBox_SundaySchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "Regular", "Robotics", "EOD", "Half Day", "C Day", "Indoor", "Staff", " " }));

        doors_label_monday.setText("Monday");

        doors_label_tuesday.setText("Tuesday");

        doors_label_wednesday.setText("Wednesday");

        doors_label_thursday.setText("Thursday");

        doors_label_friday.setText("Friday");

        doors_label_saturday.setText("Saturday");

        doors_label_sunday.setText("Sunday");

        doors_label_description.setText("Description");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Time Stamp", "Employee"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        doors_table_logs.setViewportView(jTable2);

        javax.swing.GroupLayout doors_panel_DisplayInfoLayout = new javax.swing.GroupLayout(doors_panel_DisplayInfo);
        doors_panel_DisplayInfo.setLayout(doors_panel_DisplayInfoLayout);
        doors_panel_DisplayInfoLayout.setHorizontalGroup(
            doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doors_label_location, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doors_label_status)
                            .addComponent(doors_label_building))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_radiobutton_Building1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_radiobutton_Building2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_radiobutton_Building3))
                            .addComponent(doors_label_CurrentDoorStatus)
                            .addComponent(doors_button_SlectLocation)
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_ComboBox_MondaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_label_monday))
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_ComboBox_TuesdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_label_tuesday))
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_ComboBox_WednesdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_label_wednesday))
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_ComboBox_ThursadaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_label_thursday))
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addComponent(doors_ComboBox_FridaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doors_label_friday))))
                    .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doors_label_name)
                            .addComponent(doors_label_description))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doors_TextField_name)
                            .addComponent(doors_textField_description, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)))
                    .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doors_label_schedules)
                            .addComponent(doors_label_log))
                        .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                        .addComponent(doors_ComboBox_SundaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(doors_label_sunday, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                        .addComponent(doors_ComboBox_SaturdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(doors_label_saturday, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(doors_table_logs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        doors_panel_DisplayInfoLayout.setVerticalGroup(
            doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doors_panel_DisplayInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_label_name)
                    .addComponent(doors_TextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doors_label_description)
                    .addComponent(doors_textField_description, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_label_status)
                    .addComponent(doors_label_CurrentDoorStatus))
                .addGap(19, 19, 19)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_label_location)
                    .addComponent(doors_button_SlectLocation))
                .addGap(18, 18, 18)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_label_building)
                    .addComponent(doors_radiobutton_Building1)
                    .addComponent(doors_radiobutton_Building2)
                    .addComponent(doors_radiobutton_Building3))
                .addGap(18, 18, 18)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_label_schedules)
                    .addComponent(doors_ComboBox_MondaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_ComboBox_SaturdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_label_monday)
                    .addComponent(doors_label_saturday))
                .addGap(6, 6, 6)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_ComboBox_TuesdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_ComboBox_SundaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_label_tuesday)
                    .addComponent(doors_label_sunday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_ComboBox_WednesdaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_label_wednesday))
                .addGap(5, 5, 5)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_ComboBox_ThursadaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_label_thursday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors_ComboBox_FridaySchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors_label_friday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(doors_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doors_label_log)
                    .addComponent(doors_table_logs, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout mainWindow_pane_doorsLayout = new javax.swing.GroupLayout(mainWindow_pane_doors);
        mainWindow_pane_doors.setLayout(mainWindow_pane_doorsLayout);
        mainWindow_pane_doorsLayout.setHorizontalGroup(
            mainWindow_pane_doorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainWindow_pane_doorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainWondow_pane_DoorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainWindow_pane_doorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doors_panel_CrudButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doors_panel_DisplayInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainWindow_pane_doorsLayout.setVerticalGroup(
            mainWindow_pane_doorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainWindow_pane_doorsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainWindow_pane_doorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainWindow_pane_doorsLayout.createSequentialGroup()
                        .addComponent(doors_panel_CrudButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doors_panel_DisplayInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(mainWondow_pane_DoorInfo))
                .addGap(330, 330, 330))
        );

        mainWindow_tabbedPane_features.addTab("Doors", mainWindow_pane_doors);

        Schedule_table_schdulesinfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Description", "Color", "Open Times"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Schedule_table_schdulesinfo.setColumnSelectionAllowed(true);
        Schedule_table_schdulesinfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Schedule_table_schdulesinfoMouseClicked(evt);
            }
        });
        mainWondow_pane_ScheduleInfo.setViewportView(Schedule_table_schdulesinfo);
        Schedule_table_schdulesinfo.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        Schedule_CRUD_add.setText("Add");
        Schedule_CRUD_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_CRUD_addActionPerformed(evt);
            }
        });

        Schedule_CRUD_edit.setText("Edit");

        Schedule_CRUD_delete.setText("Delete");
        Schedule_CRUD_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_CRUD_deleteActionPerformed(evt);
            }
        });

        Schedule_CRUD_save.setText("Save");

        javax.swing.GroupLayout shedules_panel_CrudButtonsLayout = new javax.swing.GroupLayout(shedules_panel_CrudButtons);
        shedules_panel_CrudButtons.setLayout(shedules_panel_CrudButtonsLayout);
        shedules_panel_CrudButtonsLayout.setHorizontalGroup(
            shedules_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shedules_panel_CrudButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Schedule_CRUD_add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Schedule_CRUD_edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Schedule_CRUD_delete)
                .addGap(51, 51, 51)
                .addComponent(Schedule_CRUD_save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        shedules_panel_CrudButtonsLayout.setVerticalGroup(
            shedules_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shedules_panel_CrudButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(shedules_panel_CrudButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedule_CRUD_add)
                    .addComponent(Schedule_CRUD_edit)
                    .addComponent(Schedule_CRUD_delete)
                    .addComponent(Schedule_CRUD_save))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Schedule_label_name.setText("Name");

        Schedule_textField_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_textField_nameActionPerformed(evt);
            }
        });

        Schedule_label_description.setText("Description");

        Schedule_textArea_description.setColumns(20);
        Schedule_textArea_description.setRows(5);
        Schedule_scrollPanel_description.setViewportView(Schedule_textArea_description);

        schedules_fiels_color.setText("Color");

        Schedule_textLabel_times.setText("Times");

        Schedule_Button_chooseColor.setText("Choose Color");
        Schedule_Button_chooseColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_Button_chooseColorActionPerformed(evt);
            }
        });

        Schedule_Button_addTime.setText("Add Time");
        Schedule_Button_addTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_Button_addTimeActionPerformed(evt);
            }
        });

        Schedule_Button_editTimes.setText("Edit Time");

        Schedule_Button_deleteTime.setText("Delete Time");

        Schedule_Table_OpenClosedTimes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Open Time", "Close Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Schedule_scrollPanel_OpenClosedTimes.setViewportView(Schedule_Table_OpenClosedTimes);

        javax.swing.GroupLayout schedules_panel_DisplayInfoLayout = new javax.swing.GroupLayout(schedules_panel_DisplayInfo);
        schedules_panel_DisplayInfo.setLayout(schedules_panel_DisplayInfoLayout);
        schedules_panel_DisplayInfoLayout.setHorizontalGroup(
            schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedules_panel_DisplayInfoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(schedules_panel_DisplayInfoLayout.createSequentialGroup()
                        .addComponent(Schedule_label_name)
                        .addGap(18, 18, 18)
                        .addComponent(Schedule_textField_name, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(schedules_panel_DisplayInfoLayout.createSequentialGroup()
                        .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(schedules_fiels_color)
                            .addComponent(Schedule_label_description)
                            .addComponent(Schedule_textLabel_times))
                        .addGap(18, 18, 18)
                        .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Schedule_Button_chooseColor)
                            .addComponent(Schedule_scrollPanel_description, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(schedules_fiels_colorselector, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, schedules_panel_DisplayInfoLayout.createSequentialGroup()
                                    .addComponent(Schedule_Button_addTime)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Schedule_Button_editTimes)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Schedule_Button_deleteTime)))
                            .addComponent(Schedule_scrollPanel_OpenClosedTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 23, Short.MAX_VALUE))
        );
        schedules_panel_DisplayInfoLayout.setVerticalGroup(
            schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedules_panel_DisplayInfoLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedule_label_name)
                    .addComponent(Schedule_textField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Schedule_label_description)
                    .addComponent(Schedule_scrollPanel_description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(schedules_fiels_color)
                        .addComponent(Schedule_Button_chooseColor))
                    .addComponent(schedules_fiels_colorselector, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(schedules_panel_DisplayInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schedule_textLabel_times)
                    .addComponent(Schedule_Button_addTime)
                    .addComponent(Schedule_Button_editTimes)
                    .addComponent(Schedule_Button_deleteTime))
                .addGap(18, 18, 18)
                .addComponent(Schedule_scrollPanel_OpenClosedTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainWindow_pane_schedulesLayout = new javax.swing.GroupLayout(mainWindow_pane_schedules);
        mainWindow_pane_schedules.setLayout(mainWindow_pane_schedulesLayout);
        mainWindow_pane_schedulesLayout.setHorizontalGroup(
            mainWindow_pane_schedulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainWindow_pane_schedulesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainWondow_pane_ScheduleInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainWindow_pane_schedulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shedules_panel_CrudButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(schedules_panel_DisplayInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainWindow_pane_schedulesLayout.setVerticalGroup(
            mainWindow_pane_schedulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainWindow_pane_schedulesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainWindow_pane_schedulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainWindow_pane_schedulesLayout.createSequentialGroup()
                        .addComponent(mainWondow_pane_ScheduleInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 194, Short.MAX_VALUE))
                    .addGroup(mainWindow_pane_schedulesLayout.createSequentialGroup()
                        .addComponent(shedules_panel_CrudButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(schedules_panel_DisplayInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainWindow_tabbedPane_features.addTab("Schedules", mainWindow_pane_schedules);

        jMenu1.setText("File");
        mainWindow_MenuBar.add(jMenu1);

        jMenu2.setText("Edit");
        mainWindow_MenuBar.add(jMenu2);

        setJMenuBar(mainWindow_MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindow_tabbedPane_features, javax.swing.GroupLayout.PREFERRED_SIZE, 1232, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainWindow_tabbedPane_features, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Schedule_Button_chooseColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_Button_chooseColorActionPerformed
        Color color = JColorChooser.showDialog(MainWindow.this, 
                                               "Choose schedule color: ", 
                                               schedules_fiels_colorselector.getBackground());
        
        if (color != null) {
            schedules_fiels_colorselector.setBackground(color);
        }
    }//GEN-LAST:event_Schedule_Button_chooseColorActionPerformed

    private void Schedule_Button_addTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_Button_addTimeActionPerformed
        Schedules_dialog_time.setVisible(true);
        resetTimesDialog();
    }//GEN-LAST:event_Schedule_Button_addTimeActionPerformed

    private void Schedule_textField_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_textField_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Schedule_textField_nameActionPerformed

    private void doors_ComboBox_ThursadayScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doors_ComboBox_ThursadayScheduleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doors_ComboBox_ThursadayScheduleActionPerformed

    private void doors_ComboBox_TuesdayScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doors_ComboBox_TuesdayScheduleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doors_ComboBox_TuesdayScheduleActionPerformed

    private void Schedule_table_schdulesinfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Schedule_table_schdulesinfoMouseClicked
        //When a row is seleceted with the mouse, the method will get selected
        //row, and read the value in the coumn header. It then uses the name
        //to get the schedule associaated with the row from the schedules
        //hashmap. the methos will populate the display fields from the schdule
        //not from the row vlaues.
        
        int row  = Schedule_table_schdulesinfo.getSelectedRow();
        String name = (String) Schedule_table_schdulesinfo.getModel().getValueAt(row, 0);
        Schedule schedule = schedules.get(name);
        
        Schedule_textField_name.setText(schedule.getName());
        Schedule_textArea_description.setText(schedule.getDescription());
        //set the background color of the colorSelected
        schedules_fiels_colorselector.setBackground(schedule.getColor());
        schedules_fiels_colorselector.setOpaque(true);
        
        //Reanable all of the form buttons for editing and/or deliting schedules
        setGroupEnabled(true, schedulesGroup);
    }//GEN-LAST:event_Schedule_table_schdulesinfoMouseClicked

    private void Schedule_CRUD_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_CRUD_addActionPerformed
        Schedule_textField_name.setText("");
        Schedule_textArea_description.setText("");
        schedules_fiels_colorselector.setBackground(null);
        currentSchedule = null;
    }//GEN-LAST:event_Schedule_CRUD_addActionPerformed

    private void Schedule_CRUD_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_CRUD_deleteActionPerformed
        //step 1
        int row = Schedule_table_schdulesinfo.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Schedule_table_schdulesinfo.getModel();
        String name = (String) model.getValueAt(row, 0);
        
        Schedule schedule = schedules.get(name);
        
        currentSchedule = schedule;
        //confirm window
        int confirm = JOptionPane.showConfirmDialog(null, "Confirm: Delete " + name + " schedule?");
        if(confirm != JOptionPane.YES_OPTION) return;
        // step 2
        schedules.remove(name);
        //step 3
        buildSchedulesTable();
        //step 4 - disable them
        setGroupEnabled(false, schedulesGroup);
        //step 5 - reset names
        Schedule_textField_name.setText("");
        Schedule_textArea_description.setText("");
        schedules_fiels_colorselector.setBackground(null);
        currentSchedule = null;
    }//GEN-LAST:event_Schedule_CRUD_deleteActionPerformed

    private void Schedules_button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedules_button_saveActionPerformed
        // step 1 - verify that all fields are selected
        if(Schedules_comboBox_openHours.getSelectedIndex()==0 || Schedules_comboBox_closedHours.getSelectedIndex()==0 || Schedules_comboBox_openMinutes.getSelectedIndex()==0 || Schedules_comboBox_closedMinutes.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(MainWindow.this, "ERROR: Please select all 4 options.");
            return;
        }
        // step 2 - verift that is closetime is => to open time
        int openHour = Integer.parseInt((String)Schedules_comboBox_openHours.getSelectedItem());
        int openMinute = Integer.parseInt((String)Schedules_comboBox_openMinutes.getSelectedItem());
        int closeMinute = Integer.parseInt((String)Schedules_comboBox_closedMinutes.getSelectedItem());
        int closeHour = Integer.parseInt((String)Schedules_comboBox_closedHours.getSelectedItem());
        
        if(openHour > closeHour || (openHour == closeHour && openMinute > closeMinute)){
            JOptionPane.showMessageDialog(MainWindow.this, "ERROR: Close time must be equal to or after open time");
            return;
        }
        
        //step 3 - create a doortime object from the selected fields
        GregorianCalendar openTime = new GregorianCalendar(22, 9, 4, openHour, openMinute);
        GregorianCalendar closeTime = new GregorianCalendar(22, 9, 4, closeHour, closeMinute);
        
        DoorTime time = new DoorTime(openTime, closeTime);
        
        //step 4 - Get selected schedule to get the schedule.time ArrayList
        ArrayList<DoorTime> times = (currentSchedule == null)? new ArrayList<>() : currentSchedule.getTimes();
        //step 5 - add doortime to arraylist
        times.add(time);
        //step 6 - buildtimes table 
        Schedules_dialog_time.setVisible(false);
    }//GEN-LAST:event_Schedules_button_saveActionPerformed

    private void Schedules_button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedules_button_cancelActionPerformed
        Schedules_dialog_time.setVisible(false);
        currentSchedule = null;
        resetTimesDialog();
    }//GEN-LAST:event_Schedules_button_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Schedule_Button_addTime;
    private javax.swing.JButton Schedule_Button_chooseColor;
    private javax.swing.JButton Schedule_Button_deleteTime;
    private javax.swing.JButton Schedule_Button_editTimes;
    private javax.swing.JButton Schedule_CRUD_add;
    private javax.swing.JButton Schedule_CRUD_delete;
    private javax.swing.JButton Schedule_CRUD_edit;
    private javax.swing.JButton Schedule_CRUD_save;
    private javax.swing.JTable Schedule_Table_OpenClosedTimes;
    private javax.swing.JLabel Schedule_label_description;
    private javax.swing.JLabel Schedule_label_name;
    private javax.swing.JScrollPane Schedule_scrollPanel_OpenClosedTimes;
    private javax.swing.JScrollPane Schedule_scrollPanel_description;
    private javax.swing.JTable Schedule_table_schdulesinfo;
    private javax.swing.JTextArea Schedule_textArea_description;
    private javax.swing.JTextField Schedule_textField_name;
    private javax.swing.JLabel Schedule_textLabel_times;
    private javax.swing.JButton Schedules_button_cancel;
    private javax.swing.JButton Schedules_button_save;
    private javax.swing.JComboBox<String> Schedules_comboBox_closedHours;
    private javax.swing.JComboBox<String> Schedules_comboBox_closedMinutes;
    private javax.swing.JComboBox<String> Schedules_comboBox_openHours;
    private javax.swing.JComboBox<String> Schedules_comboBox_openMinutes;
    private javax.swing.JDialog Schedules_dialog_time;
    private javax.swing.JLabel Schedules_label_closedTimes;
    private javax.swing.JLabel Schedules_label_instructions;
    private javax.swing.JLabel Schedules_label_openTimes;
    private javax.swing.JButton doors_CRUDbutton_add;
    private javax.swing.JButton doors_CRUDbutton_delete;
    private javax.swing.JButton doors_CRUDbutton_edit;
    private javax.swing.JButton doors_CRUDbutton_save;
    private javax.swing.JComboBox<String> doors_ComboBox_FridaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_MondaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_SaturdaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_SundaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_ThursadaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_TuesdaySchedule;
    private javax.swing.JComboBox<String> doors_ComboBox_WednesdaySchedule;
    private javax.swing.JTextField doors_TextField_name;
    private javax.swing.JButton doors_button_SlectLocation;
    private javax.swing.JLabel doors_label_CurrentDoorStatus;
    private javax.swing.JLabel doors_label_building;
    private javax.swing.JLabel doors_label_description;
    private javax.swing.JLabel doors_label_friday;
    private javax.swing.JLabel doors_label_location;
    private javax.swing.JLabel doors_label_log;
    private javax.swing.JLabel doors_label_monday;
    private javax.swing.JLabel doors_label_name;
    private javax.swing.JLabel doors_label_saturday;
    private javax.swing.JLabel doors_label_schedules;
    private javax.swing.JLabel doors_label_status;
    private javax.swing.JLabel doors_label_sunday;
    private javax.swing.JLabel doors_label_thursday;
    private javax.swing.JLabel doors_label_tuesday;
    private javax.swing.JLabel doors_label_wednesday;
    private javax.swing.JPanel doors_panel_CrudButtons;
    private javax.swing.JPanel doors_panel_DisplayInfo;
    private javax.swing.JRadioButton doors_radiobutton_Building1;
    private javax.swing.JRadioButton doors_radiobutton_Building2;
    private javax.swing.JRadioButton doors_radiobutton_Building3;
    private javax.swing.JScrollPane doors_table_logs;
    private javax.swing.JTextField doors_textField_description;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JMenuBar mainWindow_MenuBar;
    private javax.swing.JPanel mainWindow_pane_dashboard;
    private javax.swing.JPanel mainWindow_pane_doors;
    private javax.swing.JPanel mainWindow_pane_schedules;
    private javax.swing.JTabbedPane mainWindow_tabbedPane_features;
    private javax.swing.JScrollPane mainWondow_pane_DoorInfo;
    private javax.swing.JScrollPane mainWondow_pane_ScheduleInfo;
    private javax.swing.JLabel schedules_fiels_color;
    private javax.swing.JLabel schedules_fiels_colorselector;
    private javax.swing.JPanel schedules_panel_DisplayInfo;
    private javax.swing.JPanel shedules_panel_CrudButtons;
    // End of variables declaration//GEN-END:variables


    private void writeModel(DoorManagerModel model) {
       // Writes the model as an object to disk
       
        try {
            
            FileOutputStream    fos = new FileOutputStream(new File("model.dms"));
            ObjectOutputStream  oos = new ObjectOutputStream(fos);
            
            oos.writeObject(model);
            oos.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }

    private DoorManagerModel readModel() {
        
        DoorManagerModel dmm = null;
        
        try {
            
            FileInputStream     fis = new FileInputStream(new File("model.dms"));
            ObjectInputStream   ois = new ObjectInputStream(fis);
            
            dmm = (DoorManagerModel)ois.readObject();
            fis.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return dmm;
    }

    private void buildSchedulesTable() {
        //populates the shcedules table with all the data from the schedules hashmap
        //this methos is called anytime changes are amde to schedule
        
        String[] columnHeaders = {"Name", "Description", "Color", "Open Times"};
        Object[][] data = new Object[schedules.size()][4];
        
        int row = 0;
        
        for(String key : schedules.keySet()){
            Schedule schedule = schedules.get(key);
            String name = schedule.getName();
            String description = schedule.getDescription();
            Color color = schedule.getColor();
            ArrayList<DoorTime> times = schedule.getTimes();
            
            data[row][0] = name;
            data[row][1] = description;
            
            data[row][2] = String.format("%d, %d, %d", color.getRed(), color.getGreen(), color.getBlue());
            data[row][3] = times;
            
            row++;
        }
        
        DefaultTableModel model = new DefaultTableModel(data, columnHeaders);
        
        Schedule_table_schdulesinfo.setModel(model);
    }

    private void buildSchedulesGroup() {
        schedulesGroup = new JComponent[11];
        schedulesGroup[0] = Schedule_CRUD_add;
        schedulesGroup[1] = Schedule_CRUD_edit;
        schedulesGroup[2] = Schedule_CRUD_delete;
        schedulesGroup[3] = Schedule_CRUD_save;
        schedulesGroup[4] = Schedule_textField_name;
        schedulesGroup[5] = Schedule_textArea_description;
        schedulesGroup[6] = Schedule_Button_chooseColor;
        schedulesGroup[7] = Schedule_Button_addTime;
        schedulesGroup[8] = Schedule_Button_deleteTime;
        schedulesGroup[9] = Schedule_Button_editTimes;
        schedulesGroup[10] = Schedule_Table_OpenClosedTimes;
    }

    private void buildDoorsGroup() {
        
    }

    private void setGroupEnabled(boolean state, JComponent[] group) {
        for(JComponent component : group){
            component.setEnabled(state);
        }
    }

    private void resetTimesDialog() {
        //work on that
    }
    
}
